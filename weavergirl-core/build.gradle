import org.apache.tools.ant.taskdefs.condition.Os

buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
    }

    dependencies {
        classpath "io.github.notsyncing.weavergirl:weavergirl-gradle-plugin:0.1.0"
    }
}

plugins {
    id "de.richsource.gradle.plugins.typescript" version "1.8.0"
}

apply plugin: "io.github.notsyncing.weavergirl.gradle"

compileTypeScript {
    sourcemap = true
    target = "ES2015"
    pretty = true
    experimentalDecorators = true

    if (Os.isFamily(Os.FAMILY_MAC)) {
        compilerExecutable = "/usr/local/bin/node /usr/local/bin/tsc"
    }
}

weavergirl {
    srcDir = null
    additionalFiles = [project.buildDir.toPath().resolve("ts/weavergirl-core.js").toString()]
}

void doWebpack(Task task, boolean test = false) {
    def tsOutPath = project.buildDir.toPath().resolve("ts")
    def configFile = test ? "webpack.test.config.js" : "webpack.config.js"

    copy {
        from configFile
        into tsOutPath.toFile()
    }

    task.doLast {
        exec {
            workingDir tsOutPath.toFile()

            if (Os.isFamily(Os.FAMILY_MAC)) {
                commandLine "/usr/local/bin/node", "/usr/local/bin/npm", "link", "webpack", "babel-loader",
                        "babel-core", "babel-preset-es2015", "babel-preset-env", "babel-polyfill",
                        "babel-plugin-transform-decorators-legacy"
            } else {
                commandLine "npm", "link", "webpack", "babel-loader", "babel-core", "babel-preset-es2015",
                        "babel-preset-env", "babel-polyfill", "babel-plugin-transform-decorators-legacy"
            }
        }

        exec {
            workingDir tsOutPath.toFile()

            if (Os.isFamily(Os.FAMILY_MAC)) {
                commandLine "/usr/local/bin/node", "/usr/local/bin/webpack", "--config", configFile
            } else {
                commandLine "webpack", "--config", configFile
            }
        }
    }
}

task webpack() {
    doWebpack(it, false)
}

task webpackTest() {
    doWebpack(it, true)
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId rootProject.ext.grp
            artifactId 'weavergirl-core'
            version rootProject.ext.ver

            artifact(file("${buildDir}/weavergirl/${project.name}-${rootProject.ext.ver}.jar")) {
                builtBy makeWeavergirlJar
            }

            pom.withXml {
                def dependencies = asNode().appendNode('dependencies')
                configurations.compile.getResolvedConfiguration().getFirstLevelModuleDependencies().each {
                    def dependency = dependencies.appendNode('dependency')
                    dependency.appendNode('groupId', it.moduleGroup)
                    dependency.appendNode('artifactId', it.moduleName)
                    dependency.appendNode('version', it.moduleVersion)
                }
            }
        }
    }
}

project.afterEvaluate {
    webpackTest.dependsOn(compileTypeScript)
    webpack.dependsOn(compileTypeScript)
    makeWeavergirlApp.dependsOn(webpack)
}